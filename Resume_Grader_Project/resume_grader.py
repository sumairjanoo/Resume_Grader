# -*- coding: utf-8 -*-
"""resume_grader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eqaCEZK7-CBtUHlqBqD3JLYs-LxVntrm
"""

# resume_grader.py

import os
import re
import nltk
from nltk.corpus import stopwords
from collections import Counter
from textstat import textstat

# Download NLTK stopwords if not already done
nltk.download('stopwords')

# Utility function to clean text
def clean_text(text):
    """Clean the input text by removing special characters and stopwords."""
    text = text.lower()
    text = re.sub(r'\W+', ' ', text)  # Remove special characters
    words = text.split()
    stop_words = set(stopwords.words('english'))
    filtered_words = [word for word in words if word not in stop_words]
    return ' '.join(filtered_words)

# Function to extract keywords from job description
def extract_keywords(job_description):
    """Extract the most common words from the job description to identify key skills."""
    cleaned_text = clean_text(job_description)
    word_list = cleaned_text.split()
    word_counts = Counter(word_list)
    # Get the most common words, assuming these are the key skills/keywords
    common_words = [word for word, count in word_counts.most_common(20)]
    return common_words

# Function to score resume against job description
def score_resume(resume, job_description):
    """Score the resume based on keyword matching and readability."""
    # Clean and extract keywords
    keywords = extract_keywords(job_description)
    cleaned_resume = clean_text(resume)

    # Keyword matching
    match_count = sum(1 for word in cleaned_resume.split() if word in keywords)
    keyword_score = (match_count / len(keywords)) * 100  # Percentage score

    # Readability score using Flesch Reading Ease
    readability_score = textstat.flesch_reading_ease(resume)

    # Combined score (weighted average)
    final_score = (0.7 * keyword_score) + (0.3 * readability_score)

    return {
        "keyword_score": keyword_score,
        "readability_score": readability_score,
        "final_score": final_score
    }

# Example usage
if __name__ == "__main__":
    # Load sample data
    with open('data/sample_resumes/resume1.txt', 'r') as resume_file:
        resume = resume_file.read()

    with open('data/sample_job_descriptions/job1.txt', 'r') as job_file:
        job_description = job_file.read()

    # Score the resume
    scores = score_resume(resume, job_description)

    # Display the scores
    print(f"Keyword Score: {scores['keyword_score']:.2f}")
    print(f"Readability Score: {scores['readability_score']:.2f}")
    print(f"Final Score: {scores['final_score']:.2f}")